{"version":3,"sources":["Components/SelectCharacter/index.js","assets/twitter-logo.svg","App.js","index.js"],"names":["SelectCharacter","setCharacterNFT","className","TWITTER_HANDLE","TWITTER_LINK","HEY_SKYLARK_TWITTER_HANDLE","HEY_SKYLARK_TWITTER_LINK","App","useState","currentAccount","setCurrentAccount","characterNFT","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","account","connectWalletAction","alert","useEffect","src","alt","onClick","twitterLogo","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAceA,EARS,SAAC,GAAwB,EAAtBC,gBACzB,OACE,qBAAKC,UAAU,6BAAf,SACE,mECTS,MAA0B,yCCMnCC,G,MAAiB,eACjBC,EAAY,8BAA0BD,GACtCE,EAA6B,aAC7BC,EAAwB,8BAA0BD,GAwIzCE,EAtIH,WACV,MAA4CC,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBV,EAArB,KAKMW,EAAwB,uCAAG,kCAAAC,EAAA,oEAERC,OAAbC,EAFqB,EAErBA,SAFqB,uBAK3BC,QAAQC,IAAI,gCALe,iCAQ3BD,QAAQC,IAAI,8BAA+BF,GARhB,UAaJA,EAASG,QAAQ,CAAEC,OAAQ,iBAbvB,QAkBH,KALlBC,EAbqB,QAkBdC,QACLC,EAAUF,EAAS,GACzBJ,QAAQC,IAAI,+BAAgCK,GAC5CZ,EAAkBY,IAElBN,QAAQC,IAAI,+BAvBa,0DA2B7BD,QAAQC,IAAR,MA3B6B,0DAAH,qDAkCxBM,EAAmB,uCAAG,gCAAAV,EAAA,oEAEHC,OAAbC,EAFgB,EAEhBA,SAFgB,uBAKtBS,MAAM,iBALgB,0CAYDT,EAASG,QAAQ,CACtCC,OAAQ,wBAbc,OAYlBC,EAZkB,OAmBxBJ,QAAQC,IAAI,YAAaG,EAAS,IAClCV,EAAkBU,EAAS,IApBH,kDAsBxBJ,QAAQC,IAAR,MAtBwB,0DAAH,qDA0DzB,OAJAQ,qBAAU,WACRb,MACC,IAGD,qBAAKV,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,mBAAGA,UAAU,uBAAb,gEACA,mBAAGA,UAAU,WAAb,+CACA,sBAAKA,UAAU,2BAAf,UACE,qBACEwB,IAAI,0IACJC,IAAI,iBApCTlB,EAkBMA,IAAmBE,EACrB,cAAC,EAAD,CAAiBV,gBAAiBA,SADpC,EAhBH,sBAAKC,UAAU,2BAAf,UACE,qBACEwB,IAAI,kEACJC,IAAI,qBAEN,wBACEzB,UAAU,mCACV0B,QAASL,EAFX,oDAkCF,sBAAKrB,UAAU,mBAAf,UACE,qBAAKyB,IAAI,eAAezB,UAAU,eAAewB,IAAKG,IACtD,mBACE3B,UAAU,cACV4B,KAAMxB,EACNyB,OAAO,SACPC,IAAI,aAJN,6BAKe3B,KACf,qBAAKsB,IAAI,eAAezB,UAAU,eAAewB,IAAKG,IACtD,mBACE3B,UAAU,cACV4B,KAAM1B,EACN2B,OAAO,SACPC,IAAI,aAJN,+BAKiB7B,cCrI3B8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a5ba10b6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './SelectCharacter.css';\n\n/*\n * Don't worry about setCharacterNFT just yet, we will talk about it soon!\n */\nconst SelectCharacter = ({ setCharacterNFT }) => {\n  return (\n    <div className=\"select-character-container\">\n      <h2>Mint Your Hero. Choose wisely.</h2>\n    </div>\n  );\n};\n\nexport default SelectCharacter;\n","export default __webpack_public_path__ + \"static/media/twitter-logo.a8a75254.svg\";","import React, { useEffect, useState } from 'react';\nimport SelectCharacter from './Components/SelectCharacter';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst HEY_SKYLARK_TWITTER_HANDLE = \"heyskylark\"\nconst HEY_SKYLARK_TWITTER_LINK = `https://twitter.com/${HEY_SKYLARK_TWITTER_HANDLE}`;\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [characterNFT, setCharacterNFT] = useState(null);\n\n  /*\n   * Since this method will take some time, make sure to declare it as async\n   */\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        console.log('Make sure you have MetaMask!');\n        return;\n      } else {\n        console.log('We have the ethereum object', ethereum);\n\n        /*\n         * Check if we're authorized to access the user's wallet\n         */\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n        /*\n         * User can have multiple authorized accounts, we grab the first one if its there!\n         */\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          console.log('Found an authorized account:', account);\n          setCurrentAccount(account);\n        } else {\n          console.log('No authorized account found');\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*\n   * Implement your connectWallet method here\n   */\n  const connectWalletAction = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert('Get MetaMask!');\n        return;\n      }\n\n      /*\n       * Fancy method to request access to account.\n       */\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      /*\n       * Boom! This should print out public address once we authorize Metamask.\n       */\n      console.log('Connected', accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Render Methods\nconst renderContent = () => {\n    /*\n    * Scenario #1\n    */\n    if (!currentAccount) {\n      return (\n        <div className=\"connect-wallet-container\">\n          <img\n            src=\"https://64.media.tumblr.com/tumblr_mbia5vdmRd1r1mkubo1_500.gifv\"\n            alt=\"Monty Python Gif\"\n          />\n          <button\n            className=\"cta-button connect-wallet-button\"\n            onClick={connectWalletAction}\n          >\n            Connect Wallet To Get Started\n          </button>\n        </div>\n      );\n      /*\n      * Scenario #2\n      */\n    } else if (currentAccount && !characterNFT) {\n      return <SelectCharacter setCharacterNFT={setCharacterNFT} />;\n    }\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">⚔️ Metaverse Monster Slayer ⚔️</p>\n          <p className=\"sub-text\">Team up to protect the Metaverse!</p>\n          <div className=\"connect-wallet-container\">\n            <img\n              src=\"https://64.media.tumblr.com/b17ea7e368f3920b17f4466f36bbce0f/9d6219a6d0a5c588-bd/s500x750/10bcbada671d5bbb6266f5b3887e1ff00da07424.gifv\"\n              alt=\"Monsters Gif\"\n            />\n            {renderContent()}\n          </div>\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={HEY_SKYLARK_TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built by @${HEY_SKYLARK_TWITTER_HANDLE}`}</a>\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}